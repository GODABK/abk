## PREDICTION WITH SUPERVISED MACHINE LEARNING

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

url = "http://bit.ly/w-data"
dataset = pd.read_csv(url)
print("Data imported successfully")

dataset.head(20)

dataset.shape
dataset.columns
dataset.info()
dataset.describe()

X = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

print(X.shape)
print(y.shape)

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.2)

print(X_train.shape)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,y_train)

print("B1=",regressor.coef_)
print("B0 =",regressor.intercept_)

y_pred = regressor.predict(X_test)

print(y_test)
print(y_pred)

plt.scatter(X_train,y_train,color='red')
plt.plot(X_train,regressor.predict(X_train),color='blue')
# regressor.predict(x_train) because it is predicted salaries for x_train
plt.title("Simple Linear Regression on Training Data")
plt.xlabel("STUDY HOURS")
plt.ylabel("SCORE")
plt.show()

plt.scatter(X_test,y_test,color='red')
plt.plot(X_test,y_pred,color='blue')
# y_pred because it is predicted salaries for x_test

plt.title("Simple Linear Regression on Testing Data")
plt.xlabel("STUDY HOURS")
plt.ylabel("SCORE")

from sklearn.metrics import r2_score
r2_score(y_test, y_pred)

from sklearn import metrics  
print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred)) 
